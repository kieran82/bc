/*
 * SPDX-License-Identifier: Apache-2.0
 */

'use strict';

const fs = require('fs');
const path = require('path');

const network = require('./network');

const testIn = 
  {
  testResultId: 'T102',
  docType: 'testResult',
  client: 'Shanagarry',
  stockId: '103',
  result: 'Safely does it boyo'
  };

const testy = async () => {
const res = await network.getHistoryForKey(testIn.testResultId);
// res.toString().split('').forEach((c) => { console.log(String.fromCharCode(c)) });
  const jp = res.toJSON();
  
// console.log(jp.data);
//   const str = jp.data.toString().split(',').forEach((c) => {
//     console.log(String.fromCharCode(parseInt(c, 10)));
// } );
// console.log(str);

//   let allResults = []
// const testString = "91,123,34,84,120,73,100,34,58,34,57,54,54,50,98,54,56,100,53,100,48,55,50,57,97,101,52,52,52,100,56,54,102,99,56,56,51,48,53,50,50,55,101,102,56,54,51,53,49,57,53,98,97,51,99,54,48,99,52,99,100,101,48,49,55,49,55,52,102,55,102,52,101,50,34,44,34,84,105,109,101,115,116,97,109,112,34,58,123,34,115,101,99,111,110,100,115,34,58,123,34,108,111,119,34,58,49,53,54,52,49,52,54,53,51,48,44,34,104,105,103,104,34,58,48,44,34,117,110,115,105,103,110,101,100,34,58,102,97,108,115,101,125,44,34,110,97,110,111,115,34,58,49,50,48,48,48,48,48,48,48,125,44,34,73,115,68,101,108,101,116,101,34,58,34,102,97,108,115,101,34,44,34,86,97,108,117,101,34,58,123,34,118,97,108,117,101,34,58,34,123,92,34,116,101,115,116,82,101,115,117,108,116,73,100,92,34,58,92,34,84,49,48,51,92,34,44,92,34,100,111,99,84,121,112,101,92,34,58,92,34,116,101,115,116,82,101,115,117,108,116,92,34,44,92,34,99,108,105,101,110,116,92,34,58,92,34,83,104,97,110,97,103,97,114,114,121,92,34,44,92,34,115,116,111,99,107,73,100,92,34,58,92,34,49,48,51,92,34,44,92,34,114,101,115,117,108,116,92,34,58,92,34,83,97,102,101,108,121,32,100,111,101,115,32,105,116,32,98,111,121,111,92,34,125,34,125,125,93";
  const testString = "91,123,34,84,120,73,100,34,58,34,97,50,51,97,48,51,98,51,99,97,57,54,52,52,51,99,54,56,102,97,52,50,48,50,56,57,102,97,50,99,56,53,98,49,99,55,98,52,97,55,102,101,53,99,54,51,48,52,48,49,57,102,51,102,49,50,98,98,100,51,102,100,100,55,34,44,34,84,105,109,101,115,116,97,109,112,34,58,123,34,115,101,99,111,110,100,115,34,58,123,34,108,111,119,34,58,49,53,54,52,49,51,52,56,48,51,44,34,104,105,103,104,34,58,48,44,34,117,110,115,105,103,110,101,100,34,58,102,97,108,115,101,125,44,34,110,97,110,111,115,34,58,51,48,51,48,48,48,48,48,48,125,44,34,73,115,68,101,108,101,116,101,34,58,34,102,97,108,115,101,34,44,34,86,97,108,117,101,34,58,123,34,116,101,115,116,82,101,115,117,108,116,73,100,34,58,34,84,49,48,50,34,44,34,100,111,99,84,121,112,101,34,58,34,116,101,115,116,82,101,115,117,108,116,34,44,34,99,108,105,101,110,116,34,58,34,83,104,97,110,97,103,97,114,114,121,34,44,34,115,116,111,99,107,73,100,34,58,49,48,50,44,34,114,101,115,117,108,116,34,58,34,83,97,102,101,34,125,125,44,123,34,84,120,73,100,34,58,34,101,49,48,100,51,97,53,55,102,57,54,102,56,54,98,53,57,102,102,101,53,55,99,52,48,54,99,101,99,97,50,53,54,98,57,52,49,98,101,54,101,50,52,49,55,56,56,53,99,49,50,56,57,101,55,49,57,57,50,57,102,98,56,97,34,44,34,84,105,109,101,115,116,97,109,112,34,58,123,34,115,101,99,111,110,100,115,34,58,123,34,108,111,119,34,58,49,53,54,52,49,51,53,52,52,49,44,34,104,105,103,104,34,58,48,44,34,117,110,115,105,103,110,101,100,34,58,102,97,108,115,101,125,44,34,110,97,110,111,115,34,58,55,49,50,48,48,48,48,48,48,125,44,34,73,115,68,101,108,101,116,101,34,58,34,102,97,108,115,101,34,44,34,86,97,108,117,101,34,58,123,34,116,101,115,116,82,101,115,117,108,116,73,100,34,58,34,84,49,48,50,34,44,34,100,111,99,84,121,112,101,34,58,34,116,101,115,116,82,101,115,117,108,116,34,44,34,99,108,105,101,110,116,34,58,34,83,104,97,110,97,103,97,114,114,121,34,44,34,115,116,111,99,107,73,100,34,58,49,48,50,44,34,114,101,115,117,108,116,34,58,34,83,97,102,101,34,125,125,44,123,34,84,120,73,100,34,58,34,98,52,56,55,57,48,54,51,56,98,48,48,98,99,48,101,56,51,48,51,50,99,48,49,50,100,48,51,50,51,49,52,48,102,56,51,55,102,98,100,52,54,50,100,98,98,48,102,98,51,100,101,55,56,48,101,98,48,51,53,48,101,48,49,34,44,34,84,105,109,101,115,116,97,109,112,34,58,123,34,115,101,99,111,110,100,115,34,58,123,34,108,111,119,34,58,49,53,54,52,49,51,54,56,56,48,44,34,104,105,103,104,34,58,48,44,34,117,110,115,105,103,110,101,100,34,58,102,97,108,115,101,125,44,34,110,97,110,111,115,34,58,55,50,54,48,48,48,48,48,48,125,44,34,73,115,68,101,108,101,116,101,34,58,34,102,97,108,115,101,34,44,34,86,97,108,117,101,34,58,123,34,116,101,115,116,82,101,115,117,108,116,73,100,34,58,34,84,49,48,50,34,44,34,100,111,99,84,121,112,101,34,58,34,116,101,115,116,82,101,115,117,108,116,34,44,34,99,108,105,101,110,116,34,58,34,83,104,97,110,97,103,97,114,114,121,34,44,34,115,116,111,99,107,73,100,34,58,49,48,50,44,34,114,101,115,117,108,116,34,58,34,83,97,102,101,34,125,125,44,123,34,84,120,73,100,34,58,34,49,97,54,97,57,101,54,97,100,99,51,54,53,102,50,100,54,98,102,51,50,52,53,102,101,99,99,56,98,53,97,99,57,99,51,53,98,100,53,54,101,52,53,55,48,100,98,101,102,49,99,51,102,101,57,53,57,101,56,50,97,49,48,101,34,44,34,84,105,109,101,115,116,97,109,112,34,58,123,34,115,101,99,111,110,100,115,34,58,123,34,108,111,119,34,58,49,53,54,52,49,51,55,53,51,55,44,34,104,105,103,104,34,58,48,44,34,117,110,115,105,103,110,101,100,34,58,102,97,108,115,101,125,44,34,110,97,110,111,115,34,58,55,53,56,48,48,48,48,48,48,125,44,34,73,115,68,101,108,101,116,101,34,58,34,102,97,108,115,101,34,44,34,86,97,108,117,101,34,58,123,34,116,101,115,116,82,101,115,117,108,116,73,100,34,58,34,84,49,48,50,34,44,34,100,111,99,84,121,112,101,34,58,34,116,101,115,116,82,101,115,117,108,116,34,44,34,99,108,105,101,110,116,34,58,34,83,104,97,110,97,103,97,114,114,121,34,44,34,115,116,111,99,107,73,100,34,58,49,48,50,44,34,114,101,115,117,108,116,34,58,34,83,97,102,101,34,125,125,93";

//   // console.log(testString.split(',').forEach((s) => (allResults.push(String.fromCharCode(parseInt(s, 10)))))); 
  testString.split(',').forEach((s) => (console.log(String.fromCharCode(parseInt(s, 10))))); 



}

testy();

// res.toString().split('').forEach((c) => {console.log(String.fromCharCode(c))});
// console.log(String.fromCharCode(65));


  // network.productTestsExists(testIn.testResultId)  ;

// network.createProductTests(testIn.testResultId, JSON.stringify(testIn));

// network.updateProductTests(testIn.testResultId, JSON.stringify(testIn));

// network.readProductTests(testIn.testResultId);

// network.deleteProductTests(testIn.testResultId);